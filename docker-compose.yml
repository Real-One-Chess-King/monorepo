version: "3.8"

services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo-data:/data/db

  # USER SERVER

  # user-server:
  #   # Choose which Dockerfile to use based on the profile
  #   build:
  #     context: .
  #     dockerfile: packages/user-server/Dockerfile # Default to production
  #   container_name: user-server
  #   ports:
  #     - "3000:3000"
  #   # env_file:
  #   # - ./packages/user-server/.env
  #   # - ./.env
  #   depends_on:
  #     - mongodb
  #   profiles:
  #     - production

  user-server-dev:
    build:
      context: .
      dockerfile: packages/user-server/Dockerfile.dev # Development Dockerfile
    container_name: user-server
    ports:
      - "${USER_SERVER_PORT}:${USER_SERVER_PORT}"
    env_file:
      - ./packages/user-server/.env
      - ./.env
    volumes:
      - ./packages/user-server/src:/app/packages/user-server/src
      - ./packages/game-logic/src:/app/packages/game-logic/src
      - user_server_node_modules:/app/packages/user-server/node_modules
      - game_logic_node_modules:/app/packages/game-logic/node_modules
    depends_on:
      - mongodb
    command: npm run start:dev --workspace=@real_one_chess_king/user-server
    profiles:
      - development

  # GAME SERVER

  game-server-dev:
    build:
      context: .
      dockerfile: packages/game-server/Dockerfile.dev # Development Dockerfile
    container_name: game-server
    ports:
      - "${GAME_SERVER_PORT}:${GAME_SERVER_PORT}"
    env_file:
      - ./packages/game-server/.env
      - ./.env
    volumes:
      - ./packages/game-server/src:/app/packages/game-server/src
      - ./packages/game-logic/src:/app/packages/game-logic/src
      - game_server_node_modules:/app/packages/game-server/node_modules
      - game_logic_node_modules:/app/packages/game-logic/node_modules
    depends_on:
      - mongodb
    command: pnpm start:dev:game-server
    # command: tail -f /dev/null
    #
    # command: npm run start:dev --workspace=@real_one_chess_king/game-server
    profiles:
      - development

    # GAME SERVER

  front-end-dev:
    build:
      context: .
      dockerfile: packages/front-end/Dockerfile.dev # Development Dockerfile
    container_name: front-end
    ports:
      - "${FRONT_END_PORT}:${FRONT_END_PORT}"
    volumes:
      - ./packages/front-end/src:/app/packages/front-end/src
      - ./packages/game-logic/src:/app/packages/game-logic/src
      # - ./packages/game-logic/config:/app/packages/game-logic/config
      - front_end_node_modules:/app/packages/front=end/node_modules
      - game_logic_node_modules:/app/packages/game-logic/node_modules

    env_file:
      - ./.env
      # - ./packages/front-end/.env
    command: pnpm run start:dev:front-end
    #
    # command: npm run start:dev --workspace=@real_one_chess_king/game-server
    profiles:
      - development

  # MONGO EXPRESS

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://root:pass@mongodb:27017/mydatabase?authSource=admin
    depends_on:
      - mongodb
    profiles:
      - development

volumes:
  mongo-data:
  game_server_node_modules:
  user_server_node_modules:
  game_logic_node_modules:
  front_end_node_modules:
